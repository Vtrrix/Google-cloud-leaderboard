{"version":3,"sources":["assets/logo.png","components/NavBar.js","components/Profile.js","components/LeaderBoard.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","NavBar","CssBaseline","AppBar","style","background","Toolbar","Typography","variant","src","Logo","className","alt","IconButton","marginLeft","onClick","changeTheme","color","grey","useStyles","makeStyles","theme","root","marginBottom","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","blue","golden","border","marginTop","silver","bronze","Profile","student","index","classes","useState","expanded","setExpanded","Card","key","id","CardContent","Box","display","flexDirection","alignItems","flex","component","marginRight","href","qwiklabs_id","rel","textDecoration","Avatar","aria-label","name","dp","mx","quests_status","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","Grid","flexWrap","quests","map","tile","img","width","height","margin","LeaderBoard","state","values","fetch","then","response","status","json","data","setState","Array","from","console","log","catch","err","Container","this","idx","Component","Main","palette","type","setTheme","darkTheme","createMuiTheme","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.171a0d8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.98aa612b.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  useScrollTrigger,\n  IconButton\n} from \"@material-ui/core\";\nimport Brightness4RoundedIcon from '@material-ui/icons/Brightness4Rounded';\nimport Logo from \"../assets/logo.png\";\nimport { grey } from '@material-ui/core/colors';\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  window: PropTypes.func,\n};\n\nexport default function NavBar(props) {\n  return (\n    <>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar style={{ background: \"#fafafa\" }}>\n          <Toolbar>\n            <Typography variant=\"h6\">\n              <img src={Logo} className=\"logo\" alt=\"Google\"></img>\n            </Typography>\n            <IconButton style={{marginLeft: \"auto\"}} onClick={props.changeTheme}>\n              <Brightness4RoundedIcon style={{color: grey[900]}} />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </>\n  );\n}\n","import React from \"react\";\nimport { blue } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {\n  IconButton,\n  Box,\n  Avatar,\n  Grid,\n  CardContent,\n  Typography,\n  Card,\n  Collapse,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: \"25px\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: blue[500],\n  },\n  golden: {\n    border: \"2px solid #f7cc35\",\n    marginTop: \"25px\"\n  },\n  silver: {\n    border: \"2px solid #a8a9ad\"\n  },\n  bronze: {\n    border: \"2px solid #b08d57\"\n  },\n}));\n\nexport default function Profile({ student, index }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <Card\n      key={student.id}\n      className={`${classes.root} ${index === 0? classes.golden: null} ${index === 1? classes.silver: null} ${index === 2? classes.bronze: null}`}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          // justifyContent=\"space-between\"\n        >\n          <div style={{flex: \"1\", display: \"flex\", alignItems: \"center\"}} >\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{marginRight: \"20px\"}} >\n              {`${index + 1}.`}\n            </Typography>\n            <a\n              href={student.qwiklabs_id}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ textDecoration: \"none\", color: \"#212121\" }}\n            >\n              <Box display=\"flex\">\n                <Avatar aria-label={student.name} className={classes.avatar} src={student.dp}/>\n                <Box display=\"flex\" alignItems=\"center\" mx={3}>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {student.name}\n                  </Typography>\n                </Box>\n              </Box>\n            </a>\n          </div>\n\n          <Box display=\"flex\">\n            <Avatar\n              aria-label={student.name}\n              style={{\n                color: \"#fafafa\",\n                background: \"#efefef\",\n                marginRight: \"10px\",\n                border: \"1px solid #cdcdcd\"\n              }}\n              className={classes.avatar}\n            >\n              <Typography style={{color: \"black\"}}>\n                {student.quests_status}\n              </Typography>\n            </Avatar>\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Box>\n        </Box>\n      </CardContent>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Grid style={{display: \"flex\", flexWrap: \"wrap\" }}>\n            {student.quests.map((tile) => (\n              <img src={tile.img} alt={tile.name} style={{width:\"300px\", height: \"100%\" , margin:\"auto\"}} key={tile.name}></img>\n            ))}\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Profile from \"./Profile\";\n\nclass LeaderBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: [],\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://qwiklabs-ranking-dsccu.herokuapp.com/api\")\n      .then((response) => {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n\n        response.json().then((data) => {\n          this.setState({\n            values: Array.from(data),\n          });\n          // console.log(this.state.values)\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.values.map((student, idx) => {\n          return <Profile student={student} key={student.id} index={idx}/>;\n        })}\n      </Container>\n    );\n  }\n}\n\nexport default LeaderBoard;\n","import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport LeaderBoard from \"./LeaderBoard\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction Main() {\n  \n  let [theme, setTheme] = useState({\n    palette: {\n      type: 'light',\n    },\n  })\n  function changeTheme(){\n    if(theme.palette.type === 'dark'){\n      setTheme({\n          palette: {\n            type: 'light',\n          },\n      })\n    }\n    else{\n      setTheme({\n          palette: {\n            type: 'dark',\n          },\n      })\n    }\n  }\n  let darkTheme = createMuiTheme(theme)\n  return (\n    <MuiThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <NavBar changeTheme={changeTheme}/>\n      <LeaderBoard />\n    </MuiThemeProvider>\n  )\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}