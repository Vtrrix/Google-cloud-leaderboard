{"version":3,"sources":["components/NavBar.js","components/Profile.js","components/LeaderBoard.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","NavBar","CssBaseline","AppBar","style","background","Toolbar","Typography","variant","color","fontWeight","fontSize","display","useStyles","makeStyles","theme","root","marginBottom","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Profile","student","index","classes","useState","expanded","setExpanded","Card","key","id","className","CardContent","Box","flexDirection","alignItems","flex","component","marginRight","href","qwiklabs_id","rel","textDecoration","Avatar","aria-label","name","avatar","src","dp","mx","quests_status","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","Grid","flexWrap","quests","map","tile","imageSrc","alt","title","width","height","margin","LeaderBoard","state","values","fetch","then","response","status","json","data","setState","Array","from","console","log","catch","err","Container","marginTop","this","idx","Skeleton","animation","Component","Main","palette","type","default","paper","darkTheme","createMuiTheme","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d5bca1eb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  useScrollTrigger,\n} from \"@material-ui/core\";\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  window: PropTypes.func,\n};\n\nexport default function NavBar(props) {\n  return (\n    <>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar style={{ background: \"#2e003e\" }}>\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              style={{\n                color: \"#e4dcf1\",\n                fontWeight: \"bold\",\n                fontSize: \"30px\",\n                display: \"flex\",\n              }}\n            >\n              <p>30 Days of Google Cloud</p>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {\n  IconButton,\n  Box,\n  Avatar,\n  Grid,\n  CardContent,\n  Typography,\n  Card,\n  Collapse,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: \"25px\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nexport default function Profile({ student, index }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <Card key={student.id} className={classes.root}>\n      <CardContent>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          // justifyContent=\"space-between\"\n        >\n          <div style={{ flex: \"1\", display: \"flex\", alignItems: \"center\" }}>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ marginRight: \"20px\" }}\n            >\n              {`${index + 1}.`}\n            </Typography>\n            <a\n              href={student.qwiklabs_id}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ textDecoration: \"none\", color: \"#212121\" }}\n            >\n              <Box display=\"flex\">\n                <Avatar\n                  aria-label={student.name}\n                  className={classes.avatar}\n                  src={student.dp}\n                />\n                <Box display=\"flex\" alignItems=\"center\" mx={3}>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {student.name}\n                  </Typography>\n                </Box>\n              </Box>\n            </a>\n          </div>\n\n          <Box display=\"flex\">\n            <Avatar\n              aria-label={student.name}\n              className={classes.avatar}\n              style={{ color: \"white\", background: \"#8874a3\" }}\n            >\n              <Typography>{student.quests_status}</Typography>\n            </Avatar>\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Box>\n        </Box>\n      </CardContent>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Grid style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n            {student.quests.map((tile) => (\n              <img\n                src={tile.imageSrc}\n                alt={tile.title}\n                style={{ width: \"300px\", height: \"100%\", margin: \"auto\" }}\n                key={tile.name}\n              ></img>\n            ))}\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport Profile from \"./Profile\";\n\nclass LeaderBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: [],\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://qwiklabs-ranking-dsccu.herokuapp.com/api\")\n      .then((response) => {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n\n        response.json().then((data) => {\n          this.setState({\n            values: Array.from(data),\n          });\n          // console.log(this.state.values)\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  }\n\n  render() {\n    return (\n      <Container style={{ marginTop: \"70px\" }}>\n        {this.state.values ? (\n          this.state.values.map((student, idx) => {\n            return <Profile student={student} key={student.id} index={idx} />;\n          })\n        ) : (\n          <Skeleton animation=\"wave\" variant=\"rect\" height=\"80\" />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default LeaderBoard;\n","import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport LeaderBoard from \"./LeaderBoard\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nfunction Main() {\n  let [theme, setTheme] = useState({\n    palette: {\n      type: \"dark\",\n      background: {\n        default: \"#2e003e\",\n        paper: \"#3d1e6d\",\n      },\n    },\n  });\n\n  let darkTheme = createMuiTheme(theme);\n  return (\n    <MuiThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <NavBar theme={theme} />\n      <LeaderBoard />\n    </MuiThemeProvider>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}